version: 2.1
parameters:
  run_e2e_tests:
    type: boolean
    default: true
orbs:
  slack: circleci/slack@3.4.2

jobs:
  install:
    working_directory: ~/free-bundler
    docker:
      - image: cimg/node:18.16.1
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - run:
          name: Install Bun
          command: |
            curl -fsSL https://bun.sh/install | bash
            echo 'export BUN_INSTALL="$HOME/.bun"' >> $BASH_ENV
            echo 'export PATH="$BUN_INSTALL/bin:$PATH"' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$ETHERSPOT_NPM_TOKEN" > ~/free-bundler/.npmrc
      - restore_cache:
          key: dependency-cache-{{ checksum "bun.lock" }}
      - run:
          name: Install dependencies
          command: bun install
      - save_cache:
          key: dependency-cache-{{ checksum "bun.lock" }}
          paths:
            - ./node_modules
            - ~/.bun
      - run:
          name: Dry run build
          command: bun run build
      # - slack/status:
      #     failure_message: "Triggered by: *${CIRCLE_USERNAME}* \n\n Ooops! The *$CIRCLE_JOB* job has failed! :circleci-fail:"
      #     webhook: "${SLACK_WEBHOOK_URL}"

  publish-npm-package:
    working_directory: ~/free-bundler
    docker:
      - image: cimg/node:18.16.1
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - run:
          name: Install Bun
          command: |
            curl -fsSL https://bun.sh/install | bash
            echo 'export BUN_INSTALL="$HOME/.bun"' >> $BASH_ENV
            echo 'export PATH="$BUN_INSTALL/bin:$PATH"' >> $BASH_ENV
            source $BASH_ENV
      - restore_cache:
          key: dependency-cache-{{ checksum "bun.lock" }}
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$ETHERSPOT_NPM_TOKEN" > ~/free-bundler/.npmrc
      - run:
          name: Install dependencies
          command: bun install
      - run:
          name: Build Etherpot Free Bundler
          command: bun run build
      - run:
          name: Publish package to npm
          command: |
            cd ~/free-bundler
            bun publish --access public
      - run:
          name: Announce Publish
          command: |
            chmod +x .circleci/announcePublish.sh
            .circleci/announcePublish.sh "Etherspot Free Bundler" "$(node -e "console.log(require('./package.json').version)")"
  publish-github-release:
    docker:
      - image: ardd97/ghr
    steps:
      - checkout
      - run:
          name: "Publish Release on GitHub"
          command: |
            PACKAGE_VERSION="$(jq .version package.json -r)"
            echo $PACKAGE_VERSION
            ghr -t "${GITHUB_TOKEN}" -u "${CIRCLE_PROJECT_USERNAME}" -r "${CIRCLE_PROJECT_REPONAME}" -c "${CIRCLE_SHA1}" "$PACKAGE_VERSION"

workflows:
  version: 2.1
  install_and_publish:
    jobs:
      - install:
          context: general-vars
      - publish-npm-package:
          context: general-vars
          filters:
            branches:
              only:
                - master
      - publish-github-release:
          context: general-vars
          requires:
            - publish-npm-package
          filters:
            branches:
              only:
                - master
